plugins {
    id 'java'
    id "com.google.protobuf" version "0.8.6"
    id "com.jetbrains.ruby.envs" version "0.0.4"

//    id "com.jetbrains.python.envs" version "0.0.25"
//    id 'com.linkedin.python' version "0.7.16"
//    id 'com.linkedin.python-sdist' version "0.7.16"

//    id 'com.github.blindpirate.gogradle' version '0.10'
}

apply from: 'ruby.gradle'
//apply from: 'go.gradle'
//apply from: 'python.gradle'

repositories {
    mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

version '1.0.0'

dependencies {
    //protobuf 'com.google.api.grpc:proto-google-common-protos:1.10.+'
    compile 'com.google.protobuf:protobuf-java:3.6.+'
    compile 'io.grpc:grpc-all:1.14.+'
}

protobuf {
    // Configure the protoc executable
    protoc {
        // Download from repositories
        artifact = 'com.google.protobuf:protoc:3.6.+'
    }

    plugins {
        go {
            path = "${System.getProperty('user.home')}/go/bin/protoc-gen-go"
        }
        // Define a plugin with name 'grpc'
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.11.+'
        }
    }
    generateProtoTasks {
        ofSourceSet('main')*.builtins {
            python {}
            ruby {
                outputSubDir = 'ruby/lib'
            }
        }
        ofSourceSet('main')*.plugins {
            // Apply the "grpc" plugin whose spec is defined above, without
            // options.  Note the braces cannot be omitted, otherwise the
            // plugin will not be added. This is because of the implicit way
            // NamedDomainObjectContainer binds the methods.
            grpc {}
            go {
                options.add('plugins=grpc')
            }
        }
    }
    //generatedFilesBaseDir = "$projectDir/build/src/generated"
}

task sourceJar(type: Jar) {
    destinationDir project.distsDir
    from(sourceSets.main.proto)
}

task sourceTar(type: Tar) {
    baseName project.archivesBaseName
    destinationDir project.distsDir
    compression Compression.GZIP
    from(sourceSets.main.proto)
}

assemble.dependsOn sourceJar
assemble.dependsOn sourceTar
